import { ProxyOptions } from "vite";

export type ViteBuildDevServerPaths = {
	/**
	 * URL-сервера, к которому будет выполняться запрос
	 */
	target: ProxyOptions["target"];

	/**
	 * Путь по которому будет доступен ресурс внутри приложения
	 * Например, "http:\//localhost:3000/api/v1", где "/api/v1" - это и есть segment
	 */
	segment: string;

	// /**
	//  * Когда браузер отправляет AJAX-запрос, он автоматически добавляет заголовок "Origin" в запрос, чтобы указать серверу, откуда отправлен запрос.
	//  * Это сделано с целью безопасности и предотвращения атак CSRF (межсайтовая подделка запроса).
	//  *
	//  * Заголовок "Origin" состоит из протокола, хоста и порта страницы, с которой отправлен запрос.
	//  * Например, если ваш сайт работает на "http:\//localhost:3000", то заголовок "Origin" будет иметь значение "http://localhost:3000".
	//  *
	//  * Однако, когда используется прокси, запросы могут быть отправлены на другой сервер с другим хостом и портом.
	//  * В этом случае, сервер может проверить заголовок "Origin" и отклонить запрос, поскольку его значение не соответствует ожидаемому.
	//  *
	//  * Поле changeOrigin в Vite ProxyOptions позволяет изменить значение заголовка "Origin" перед отправкой запроса на целевой сервер.
	//  * Если значение этого поля установлено на true, Vite будет изменять заголовок "Origin" на значение целевого сервера, к которому осуществляется проксирование.
	//  *
	//  * Например, если у вас есть прокси-настройки в Vite с полем changeOrigin: true и целевым сервером "http://api.example.com",
	//  * то при отправке AJAX-запроса на "http:\//localhost:3000/api", Vite изменит значение заголовка "Origin" на "http://api.example.com" перед отправкой запроса на сервер.
	//  *
	//  * Таким образом, сервер будет считать, что запрос отправлен с доверенного источника,
	//  * что может быть полезно для работы с некоторыми серверами, требующими правильного значения заголовка "Origin".
	//  */
	// changeOrigin: boolean;

	/**
	 * Позволяет настраивать перезапись пути запроса для прокси-сервера при разработке вашего приложения.
	 *
	 * Например, если вы установите "rewrite": "/api", то все запросы, начинающиеся с "/api", будут заменены на на целевую строку.
	 */
	rewrite?: ProxyOptions["rewrite"];
};

export interface ViteBuildDevServerOptions {
	port: number;
	paths?: {
		auth: ViteBuildDevServerPaths;
		main: ViteBuildDevServerPaths;
	};
}
